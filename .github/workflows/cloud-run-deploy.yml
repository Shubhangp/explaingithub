name: Deploy to Cloud Run

# Change to manual trigger with environment selection
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to environment'
        required: true
        type: choice
        options:
        - development
        - staging
        - production
      service_name:
        description: 'Cloud Run service name'
        required: true
        type: string
        default: 'testing-gcloud-ci-cd'
      port:
        description: 'Port to expose (default: 3000)'
        required: true
        type: string
        default: '3000'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      SERVICE_NAME: ${{ github.event.inputs.service_name }}
      NODE_ENV: ${{ github.event.inputs.environment }}
      PORT: ${{ github.event.inputs.port }}
    
    steps:
    - uses: actions/checkout@v3

    - name: Google Auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure Docker
      run: gcloud auth configure-docker
    
    - name: Build with Docker
      run: |
        docker build \
          --build-arg NODE_ENV=${{ env.NODE_ENV }} \
          -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
    
    - name: Push to Container Registry
      run: |
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --port ${{ env.PORT }} \
          --set-env-vars="NODE_ENV=${{ env.NODE_ENV }},NEXT_PUBLIC_VERCEL_URL=*,NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }},NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }},GITHUB_ID=${{ secrets.GITHUB_ID }},GITHUB_SECRET=${{ secrets.GITHUB_SECRET }},NEXT_PUBLIC_OPENAI_API_KEY=${{ secrets.NEXT_PUBLIC_OPENAI_API_KEY }},NEXT_PUBLIC_GA_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }},GOOGLE_SHEETS_CLIENT_EMAIL=${{ secrets.GOOGLE_SHEETS_CLIENT_EMAIL }},GOOGLE_SHEETS_PRIVATE_KEY=${{ secrets.GOOGLE_SHEETS_PRIVATE_KEY }},GOOGLE_SHEETS_ID=${{ secrets.GOOGLE_SHEETS_ID }}"
    
    # Apply IAM policy to allow unauthenticated access
    - name: Set IAM Policy for unauthenticated access
      run: |
        gcloud run services set-iam-policy ${{ env.SERVICE_NAME }} policy.yaml --region ${{ env.REGION }} 